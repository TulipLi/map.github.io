{"version":3,"sources":["mapData/origin.js","mapData/common.js","mapData/markers.js","component/Marker.js","App.js","reportWebVitals.js","index.js"],"names":["originProps","center","lng","lat","zoom","style","postion","height","enableScrollWheelZoom","mapType","points","id","position","title","imgName","infos","key","value","remark","MapApiLoaderHOC","ak","useState","showInfoWindow","setShowInfoWindow","text","offset","BMapGL","Size","color","borderRadius","background","borderColor","padding","fontSize","fontWeight","lineHeight","fontFamily","icon","onClick","onClose","width","className","map","info","markers","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAOaA,EAAc,CACvBC,OCH6B,CAC7BC,IAAK,WACLC,IAAK,WDELC,KAJc,GAKdC,MAAO,CACHC,QAAS,WACTC,OAAQ,SAEZC,uBAAuB,EACvBC,QAAS,SE4CEC,EA1DA,CAAC,CACZC,GAAI,EACJC,SAAU,CACNV,IAAK,UACLC,IAAK,WAETU,MAAO,2BACPC,QAAS,GACTC,MAAO,CAAC,CACJC,IAAK,eACLC,MAAO,gBACR,CACCD,IAAK,qBACLC,MAAO,KACR,CACCD,IAAK,qBACLC,MAAO,KACR,CACCD,IAAK,2BACLC,MAAO,IACR,CACCD,IAAK,6CACLC,MAAO,KACR,CACCD,IAAK,eACLC,MAAO,QAEXC,OAAQ,gEACT,CACCP,GAAI,EACJC,SAAU,CACNV,IAAK,WACLC,IAAK,WAETU,MAAO,gCACPC,QAAS,GACTC,MAAO,CAAC,CACJC,IAAK,eACLC,MAAO,gBACR,CACCD,IAAK,qBACLC,MAAO,KACR,CACCD,IAAK,qBACLC,MAAO,KACR,CACCD,IAAK,6CACLC,MAAO,IACR,CACCD,IAAK,6CACLC,MAAO,KACR,CACCD,IAAK,eACLC,MAAO,MAEXC,OAAQ,iE,eCbGC,4BAAgB,CAAEC,GAAI,oCAAtBD,EAvCD,SAAC,GAAiD,IAA/CP,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,MAAgBE,GAAoB,EAA7BD,QAA6B,EAApBC,OAAOG,EAAa,EAAbA,OAC9C,EAA4CG,oBAAS,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,OAAO,qCACH,cAAC,QAAD,CAAOX,SAAUA,EAAUY,KAAMX,EAAOY,OAAQ,IAAIC,OAAOC,KAAK,IAAK,IAAKtB,MAAO,CAC7EuB,MAAO,QACPC,aAAc,OACdC,WAAY,qBACZC,YAAa,UACbC,QAAS,WACTC,SAAU,OACVC,WAAY,OACZ3B,OAAQ,OACR4B,WAAY,OACZC,WAAY,8BAEhB,cAAC,SAAD,CAAQxB,SAAUA,EAAUyB,KAAK,UAAUC,QAAS,kBAAMf,GAAmBD,MAEzEA,GACA,cAAC,aAAD,CAAYT,MAAOA,EAAOD,SAAUA,EAAUa,OAAQ,IAAIC,OAAOC,KAAK,GAAI,IAAKY,QAAS,kBAAMhB,GAAkB,IAAQiB,MAAO,IAAKjC,OAAQ,IAA5I,SAEI,sBAAKkC,UAAU,iBAAf,UAEQ1B,EAAM2B,KAAI,SAAAC,GACN,OAAO,oBAAGF,UAAU,SAAb,UACH,sBAAMA,UAAU,aAAhB,SAA8BE,EAAK3B,MACnC,sBAAMyB,UAAU,aAAhB,SAA8BE,EAAK1B,cAI/C,oBAAGwB,UAAU,cAAb,UACI,sBAAMA,UAAU,aAAhB,0BACA,sBAAMA,UAAU,aAAhB,SAA8BvB,kBCSvCC,gCAAgB,CAAEC,GAAI,oCAAtBD,EAnCf,WAgBE,OACE,cAAC,IAAD,2BAASnB,GAAT,aAEI4C,EAAQF,KAAI,SAACG,GACX,OAAO,cAAC,EAAD,eAAyBA,GAAbA,EAAKlC,aCjBnBmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2869fe92.chunk.js","sourcesContent":["import {\n    taiCangAndKunShan\n} from './common'\n\n// 地图级别，数字越大，放大倍数越大\nconst MAP_LEVEL = 12\n\nexport const originProps = {\n    center: taiCangAndKunShan, // 地图中心点\n    zoom: MAP_LEVEL, // 初使缩放倍数\n    style: {\n        postion: 'relative',\n        height: '100vh'\n    },\n    enableScrollWheelZoom: true, // 滚轮缩放\n    mapType: 'earth', // 地图模式\n}","// 常用经纬度，多用于地图中心定位\n\n/**\n * 太仓和昆山的中心点\n */\nexport const taiCangAndKunShan = {\n    lng: 121.078108,\n    lat: 31.513376\n}\n","// 地图上需要标点的数据\nconst points = [{\n    id: 0,\n    position: {\n        lng: 121.16773,\n        lat: 31.541776,\n    },\n    title: '星著雅苑',\n    imgName: '',\n    infos: [{\n        key: '板块',\n        value: '沙溪'\n    }, {\n        key: '总体量',\n        value: 800\n    }, {\n        key: '总货值',\n        value: 100\n    }, {\n        key: '在售套数',\n        value: 10\n    }, {\n        key: '在售货值（亿）',\n        value: 1000\n    }, {\n        key: '分销',\n        value: '100'\n    }],\n    remark: '我是备注备注备注备注'\n}, {\n    id: 1,\n    position: {\n        lng: 121.007394,\n        lat: 31.436012,\n    },\n    title: 'xx街道xx地块2',\n    imgName: '',\n    infos: [{\n        key: '板块',\n        value: '沙溪'\n    }, {\n        key: '总体量',\n        value: 800\n    }, {\n        key: '总货值',\n        value: 100\n    }, {\n        key: '在售套数（亿）',\n        value: 10\n    }, {\n        key: '在售货值（亿）',\n        value: 1000\n    }, {\n        key: '分销',\n        value: 100\n    }],\n    remark: '我是备注备注备注备注'\n}]\n\nexport default points","/* eslint-disable no-undef */\nimport React, { useState } from 'react'\nimport { Marker, InfoWindow, Label, MapApiLoaderHOC } from 'react-bmapgl';\n\nconst Point = ({ position, title, imgName, infos, remark }) => {\n    const [showInfoWindow, setShowInfoWindow] = useState(false)\n    return <>\n        <Label position={position} text={title} offset={new BMapGL.Size(20, -30)} style={{\n            color: 'white',\n            borderRadius: '15px',\n            background: 'rgba(0, 0, 0, 0.6)',\n            borderColor: '#666666',\n            padding: '2px 10px',\n            fontSize: '12px',\n            fontWeight: 'bold',\n            height: '20px',\n            lineHeight: '20px',\n            fontFamily: '微软雅黑',\n        }} />\n        <Marker position={position} icon=\"loc_red\" onClick={() => setShowInfoWindow(!showInfoWindow)} />\n        {\n            showInfoWindow &&\n            <InfoWindow title={title} position={position} offset={new BMapGL.Size(0, -10)} onClose={() => setShowInfoWindow(false)} width={360} height={160}>\n                {/* <img style={{ backgroundImage: `url(img/${title}.png)`, backgroundSize: \"100% 100%\", width: '360px', height: '240px' }} alt=\"\" /> */}\n                <div className=\"info-container\">\n                    {\n                        infos.map(info => {\n                            return <p className=\"info-p\">\n                                <span className=\"info-title\">{info.key}</span>\n                                <span className=\"info-value\">{info.value}</span>\n                            </p>\n                        })\n                    }\n                    <p className=\"info-remark\">\n                        <span className=\"info-title\">备注</span>\n                        <span className=\"info-value\">{remark}</span>\n                    </p>\n                </div>\n            </InfoWindow>\n        }\n    </>\n}\n\nexport default MapApiLoaderHOC({ ak: '7zVZamZcs64S2GTsKdfR2hqakDVQNWmK' })(Point)","/* eslint-disable no-undef */\nimport './App.css';\nimport React, { useState } from 'react'\nimport Map from 'react-bmapgl/Map'\nimport { MapApiLoaderHOC, Polygon } from 'react-bmapgl'\nimport { originProps } from './mapData/origin'\nimport markers from './mapData/markers'\nimport Point from './component/Marker'\n\nfunction App() {\n  // console.log(new BMapGL.Boundary())\n  // var bd = new BMapGL.Boundary();\n  // const [boundaries, setBoundaries] = useState([])\n  // bd.get('太仓市', function (rs) {\n  //   // console.log('外轮廓：', rs.boundaries[0])\n  //   // console.log('内镂空：', rs.boundaries[0])\n\n  //   setBoundaries(rs.boundaries[0].split(';'))\n  //   // var hole = new BMapGL.Polygon(rs.boundaries, {\n  //   //     fillColor: 'blue',\n  //   //     fillOpacity: 0.2\n  //   // });\n  //   // map.addOverlay(hole);\n  // });\n  // console.log(boundaries)\n  return (\n    <Map {...originProps}>\n      {\n        markers.map((item) => {\n          return <Point key={item.id} {...item} />\n        })\n      }\n      {/* {boundaries.length ? <Polygon\n        path={boundaries}\n        strokeColor=\"#f00\"\n        strokeWeight={2}\n        fillColor=\"#ff0\"\n        fillOpacity={0.3}\n        onMouseover={e => { console.log(e) }}\n      /> : null} */}\n    </Map>\n  );\n}\n\nexport default MapApiLoaderHOC({ ak: '7zVZamZcs64S2GTsKdfR2hqakDVQNWmK' })(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}